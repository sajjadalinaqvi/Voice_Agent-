version: '3.8'

services:
  voice-agent:
    build: .
    ports:
      - "5000:5000"
    environment:
      - GROQ_API_KEY=${GROQ_API_KEY}
      - FLASK_ENV=production
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - voice-agent-network

  # Optional: Add FreeSwitch container for complete VoIP setup
  freeswitch:
    image: drachtio/freeswitch:latest
    ports:
      - "5060:5060/udp"  # SIP
      - "5080:5080/tcp"  # SIP over TCP
      - "8021:8021/tcp"  # ESL
      - "16384-16394:16384-16394/udp"  # RTP
    environment:
      - MOD_EVENT_SOCKET_PASSWORD=ClueCon
    volumes:
      - ./freeswitch/conf:/usr/local/freeswitch/conf
      - ./freeswitch/logs:/usr/local/freeswitch/log
    restart: unless-stopped
    networks:
      - voice-agent-network

  # Optional: Add Redis for session management
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - voice-agent-network

  # Optional: Add monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped
    networks:
      - voice-agent-network

  # Optional: Add Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    restart: unless-stopped
    networks:
      - voice-agent-network

networks:
  voice-agent-network:
    driver: bridge

volumes:
  redis-data:
  prometheus-data:
  grafana-data:

